<?xml version="1.0" encoding="UTF-8"?>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
             http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
             http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">


	<bean class="org.apache.activemq.camel.component.ActiveMQComponent" id="activemq">
		<property name="brokerURL" value="tcp://localhost.localdomain:61616"/>
		<property name="userName" value="admin"/>
		<property name="password" value="admin"/>
	</bean>
	<bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       <property name="driverClassName" value="org.postgresql.Driver" />
       <property name="url" value="jdbc:postgresql://localhost:49380/medicaldemo" />
       <property name="username" value="psteiner" />
       <property name="password" value="change12_me" />
   	</bean>
 
   	<bean id="dataToSQL" class="com.redhat.demo.medicalDemo.DataToSQLBean" />
	<bean class="com.redhat.demo.medicalDemo.DummyDataGenerator" id="dataGenerator"/>

    <camelContext trace="false" id="blueprintContext" xmlns="http://camel.apache.org/schema/blueprint">
  <route id="timerToLog">
    <from uri="timer:foo?period=5000"/>
    <setBody>
      <method ref="dataGenerator" method="getMedicalDataSet"></method>
    </setBody>
    <log message="The message contains ${body}"/>
    <to uri="direct:result"/>
  </route>
  <route id="makeChoice">
    <from uri="direct:result"/>
    <log message="The message contains ${body}"/>
    <choice>
      <when>
        <xpath>medicalDataSet/deviceID = "0"</xpath>
        <log message="Tataaaa"/>
        <to uri="direct:heartRate"/>
      </when>
      <otherwise>
        <log message="Tutuuu"/>
      </otherwise>
    </choice>
  </route>
  <route id="heartRate">
    <from uri="direct:heartRate"/>
    <log message="Received heartrate"/>
    <unmarshal>
      <jaxb contextPath="com.redhat.demo.localMedicalDemo"/>
    </unmarshal>
    <log message="After unmarshall"/>
    <to uri="bean:dataToSQL?method=toSql"/>
    <to uri="jdbc:datasource"/>
  </route>
</camelContext>

</blueprint>